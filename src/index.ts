// src/index.ts

import terminalKit from "terminal-kit";
import axios from "axios";

const { terminal, Document, FullscreenBlock, Text, Button } = terminalKit;

// URL –¥–ª—è ping-pong. –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–µ—Ä–µ–∑ PING_URL –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏
const PING_URL = process.env.PING_URL || "https://api.yourserver.com/ping";

/**
 * –ü–∏–Ω–≥—É–µ–º —Å–µ—Ä–≤–µ—Ä, –∑–∞–º–µ—Ä—è–µ–º –ª–∞—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –∏ –ª–æ–≥–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
 * –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ ‚Äî –≤—ã–±—Ä–∞—Å—ã–≤–∞–µ–º—Å—è.
 */
async function pingServer(): Promise<void> {
  const start = Date.now();
  try {
    const response = await axios.get(PING_URL);
    const latency = Date.now() - start;
    console.log(
      `ü•ä Pong –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞: ${response.data} (–ª–∞—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å: ${latency} ms)`
    );
  } catch (error) {
    console.error("üî¥ –û—à–∏–±–∫–∞ –ø—Ä–∏ ping-pong:", error);
    process.exit(1);
  }
}

/**
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞.
 * –°–Ω–∞—á–∞–ª–∞ –ª–æ–≥–∏—Ä—É–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∏ –¥–µ–ª–∞–µ–º ping-pong,
 * –ø–æ—Ç–æ–º —Å—Ä–∞–∑—É —Ä–µ–Ω–¥–µ—Ä–∏–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–µ—Ä–µ–∑ Document-–º–æ–¥–µ–ª—å.
 */
async function main() {
  console.log("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ DTrader Crypto CLI!");
  await pingServer();

  terminal.clear();

  // –°–æ–∑–¥–∞—ë–º –∫–æ—Ä–Ω–µ–≤–æ–π –¥–æ–∫—É–º–µ–Ω—Ç
  const doc = new Document();

  // –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  const screen = new FullscreenBlock({
    parent: doc,
    width: "100%",
    height: "100%",
  });

  // –ó–∞–≥–æ–ª–æ–≤–æ–∫
  new Text({
    parent: screen,
    content: "DTrader Crypto CLI",
    x: "center",
    y: 2,
    attr: { color: "green", bold: true },
  });

  // –ö–Ω–æ–ø–∫–∞ —Å—Ç–∞—Ä—Ç–∞ —Ç–æ—Ä–≥–æ–≤–ª–∏
  const startButton = new Button({
    parent: screen,
    content: "[ –ù–∞—á–∞—Ç—å —Ç–æ—Ä–≥–æ–≤–ª—é ]",
    x: "center",
    y: 6,
    attr: { fgColor: "white", bgColor: "blue" },
  });

  startButton.on("submit", () => {
    terminal.clear();
    terminal.green("üöÄ –¢–æ—Ä–≥–æ–≤–ª—è –∑–∞–ø—É—â–µ–Ω–∞...\n");
    process.exit(0);
  });

  // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –∫–ª–∞–≤–∏—à–∏ –≤—ã—Ö–æ–¥–∞
  doc.on("key", (name) => {
    if (name === "CTRL_C" || name === "q" || name === "ESCAPE") {
      terminal.clear();
      process.exit(0);
    }
  });

  doc.render();
}

main();
